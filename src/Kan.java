import java.io.*;import javax.swing.JFrame;public class Kan extends JFrame{    static node Head=new node();    //creating a head node to point to the upcoming list    static String swara="aಾಿೀುೂೆೇೈೊೋೌಂಃ";  //string in which swaras are stored     static String swraat1="ಅಆಇಈಉಊಋೠಎಏಐಒಓಔಅಂಅಃ"; //string in which swaras appearing at pos 1 are stored    static String vyanj="ಕಖಗಘಙಚಛಜಝಞಟಠಡಢಣತಥದಧನಪಫಬಭಮಯರಲವಶಷಸಹಳ";    //string in which vyanjanas are stored    public static void main(String []args) throws IOException   {    	System.out.println(swara.length());        String g="";         	        int s;        NewJFrame frame=new NewJFrame();    //frame for Main frame (GUI)        frame.setVisible(true);    }    /**     *     * @param str     * @param lang     * @throws IOException     */    public static void readFile(String str,String lang) throws IOException    {        if(lang.charAt(0)== 'k')        {            swara="aಾಿೀುೂೆೇೈೊೋೌಂಃ";  //string in which swaras are stored             swraat1="ಅಆಇಈಉಊಋೠಎಏಐಒಓಔಅಂಅಃ"; //string in which swaras appearing at pos 1 are stored            vyanj="ಕಖಗಘಙಚಛಜಝಞಟಠಡಢಣತಥದಧನಪಫಬಭಮಯರಲವಶಷಸಹಳ";    //string in which vyanjanas are stored        }        else        {            swara="aािीुूृॄेyैोsौ";  //string in which swaras are stored             swraat1="अआइईउऊएऐओऔअंअः"; //string in which swaras appearing at pos 1 are stored            vyanj="कखगघङचछजझञटठडढणतथदधनपफबभमयरलवसशषहक्षत्रज्ञ";    //string in which vyanjanas are stored        }        InputStreamReader in=null;     	in = new InputStreamReader(new FileInputStream(str), "UTF-8");		int s=in.read();        String g="";        while(s != -1)        {            g=g+(char)s;                    // reading from file and storing in g            s=in.read();        }	processText(g,lang);    }    /*        This function processes the text ,i.e groups the text into sets for getting         hashcode values and sends it to SoundClipTest to get the corresponding audio clips    */    public static void processText(String g,String lang)    {        if(lang.charAt(0)== 'k')        {            swara="aಾಿೀುೂೆೇೈೊೋೌಂಃ";  //string in which swaras are stored             swraat1="ಅಆಇಈಉಊಋೠಎಏಐಒಓಔಅಂಅಃ"; //string in which swaras appearing at pos 1 are stored            vyanj="ಕಖಗಘಙಚಛಜಝಞಟಠಡಢಣತಥದಧನಪಫಬಭಮಯರಲವಶಷಸಹಳ";    //string in which vyanjanas are stored        }        else        {            swara="aािीुूृॄेyैोsौ";  //string in which swaras are stored             swraat1="अआइईउऊएऐओऔअंअः"; //string in which swaras appearing at pos 1 are stored            vyanj="कखगघङचछजझञटठडढणतथदधनपफबभमयरलवसशषहक्षत्रज्ञ";    //string in which vyanjanas are stored        }    	grouping(g);// grouping func makes sets of letters                 System.out.println("before : ");        disp();	change();	System.out.println("after : ");        disp();        SoundClipTest sound=new SoundClipTest(Head);         	        sound.play(g);    }		    /*        This function groups the input string into sets.    */    public static void grouping(String full_Word)    {	     	int i=0;	String str_String="";        while(i<full_Word.length())        {               if(i!=full_Word.length()-1 && full_Word.charAt(i+1)=='ಂ') // if next character is am put this char in the string		{                    str_String=str_String+full_Word.charAt(i);		}		else if(isSwara(full_Word.charAt(i))) // if its a swara then its end of letter		{                    str_String=str_String+full_Word.charAt(i);		    System.out.println(str_String+" "); 		    hashCode(str_String);           		    str_String="";		}		else if(i!=full_Word.length()-1 && (full_Word.charAt(i+1)=='್'                         || isSwara(full_Word.charAt(i+1))))// if next character is adha then		{												//put this character in string                    str_String=str_String+full_Word.charAt(i);            		}		else if(full_Word.charAt(i)=='್')// if it is adha put it in string		{                    str_String=str_String+full_Word.charAt(i);		}		else // if it is full letter it is the end of letter		{                    str_String=str_String+full_Word.charAt(i);		    System.out.println(str_String+" ");		    hashCode(str_String);		    str_String="";            		}        		i++;	}    }       public static boolean isSwara(char i)// checks whether the incoming character is a swara    {        if(swara.indexOf(i)!=-1)            return true;      	return false;    }    /*        This method produces a unique combination of nos and stores it in a list      */    public static void hashCode(String g)     {             node pres=Head;        while(pres.link!=null)           	pres=pres.link;         	node temp=new node();	pres.link=temp;	int i=g.length();	switch (i)	{            case 1:case_1(g,temp);                    break;	    case 2:case_2(g,temp);	            break;	    case 3:case_3(g,temp);	            break;	    case 4:case_4(g,temp);	            break;	    case 5:case_5(g,temp);	  	   break;            default:break;         	}    }     /*        This function groups those sets which have only one character eg: ka    */    public static void case_1(String g,node temp)    {      	char a=g.charAt(0);      	if(swraat1.indexOf(a)!=-1)	    temp.swara=swraat1.indexOf(a);	else            temp.main_vyanj=vyanj.indexOf(a);    }    /*        This function groups those sets which have 2 characters eg: 1.ki 2.kam    */    public static void case_2(String g,node temp)    {        if(g.charAt(1)=='ಂ')   	{            temp.am=true;            char a=g.charAt(0);                  if(swraat1.indexOf(a)!=-1)                temp.swara=swraat1.indexOf(a);            else            	temp.main_vyanj=vyanj.indexOf(a);      	}	   	else   	{            temp.main_vyanj=vyanj.indexOf(g.charAt(0));            temp.swara=swara.indexOf(g.charAt(1));               	}    }    /*        This function groups those sets which have 3 characters eg: 1.nya 2.main    */    public static void case_3(String g,node temp)    {   	if(g.charAt(2)=='ಂ')   	{            temp.am=true;            temp.main_vyanj=vyanj.indexOf(g.charAt(0));            temp.swara=swara.indexOf(g.charAt(1));      	}	else	{            temp.vat_vyanj=vyanj.indexOf(g.charAt(0));            temp.main_vyanj=vyanj.indexOf(g.charAt(2));         	}	    }    /*        This function groups those sets which have 4 characters eg: 1.nyu 2. nyam    */    public static void case_4(String g,node temp)    {        if(g.charAt(3)=='ಂ')	{            temp.am=true;            temp.vat_vyanj=vyanj.indexOf(g.charAt(0));            temp.main_vyanj=vyanj.indexOf(g.charAt(2));         	}		else	{            temp.vat_vyanj=vyanj.indexOf(g.charAt(0));	    temp.main_vyanj=vyanj.indexOf(g.charAt(2));	    temp.swara=swara.indexOf(g.charAt(3));	}    }    /*        This function groups those sets which have 5 characters ex: prem    */    public static void case_5(String g,node temp)    {        temp.am=true;        temp.vat_vyanj=vyanj.indexOf(g.charAt(0));	temp.main_vyanj=vyanj.indexOf(g.charAt(2));	temp.swara=swara.indexOf(g.charAt(3));          }    /*        This function displays the contents of the list    */    public static void disp()    {	node temp=Head;	while(temp!=null)	{            System.out.println(temp.vat_vyanj+" "+temp.main_vyanj+" "+temp.swara+" "+temp.next_vat+" "+temp.am);            temp=temp.link;	}	    }    /*        This function puts next word's vattu in previous word    */    public static void change()    {        node temp=Head.link;	while(temp!=null && temp.link!=null)	{            temp.next_vat=temp.link.vat_vyanj;            temp.link.vat_vyanj=-1;            temp=temp.link;	}   	       } }